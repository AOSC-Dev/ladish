This is the ChangeLog up until 0.5.0

-Dave



Wed Jul 23 22:16:09 BST 2003 node <node@insanity.tek.net>
lashd
* moved loader to $(top_srcdir)/loader
liblash
* 

Mon Jul 21 19:40:31 BST 2003 node <node@insanity.tek.net>
liblash
* comm.c, comm_buffer.[ch], comm_event.[ch]: lash_comm_t -> lash_client_t

Tue Jul 15 20:35:08 BST 2003 node <node@insanity.tek.net>
liblash
* types.h, client.h: CCA_Server_UI -> CCA_Server_Interface
* client.h, comm.h: lash_comm_t, lash_client_t merged

Thu Feb 20 19:04:14 GMT 2003 node <node@insanity.tek.net>
lashd
* server.c: added server_lose_project ()
* project.c: made project_save_clients use client names if they exist
liblash
* types.h: removed CCA_Project, added CCA_Project_Add and CCA_Project_Remove

*** Released 0.3.1 ***

*** Released 0.3.0 ***

Wed Feb 05 19:49:40 GMT 2003 node <node@insanity.tek.net>
lashd
* alsa_mgr.c: added alsa_mgr_{,un}lock_clients ()
* alsa_mgr.c: added alsa_mgr_{,un}lock_seq ()

Tue Feb 04 12:59:53 GMT 2003 node <node@insanity.tek.net>
lashd
* alsa_mgr.c: wrapped stray alsa_client_lock with
  pthread_mutex_{,un}lock (&alsa_mgr->clients_lock)
* alsa_mgr.c: made clients_lock PTHREAD_MUTEX_RECURSIVE
liblash
* config.h,event.h: func () -> func (void)

Sun Jan 26 19:16:26 GMT 2003 node <node@insanity.tek.net>
lashd
* jack_mgr.c: fixed bug with jack_mgr's client pointers
* project.c: fixed list data casting bug

Sun Jan 12 16:46:45 GMT 2003 node <node@insanity.tek.net>
lashd
loader.[ch], server.c: changed loader->load_in_terms to CCA_Terminal usage
liblash
* protocol.h: bumped protocol to 1.1 (Use_Terminal is backward compatible)
* types.h, client.h: added Use_Terminal

*** Released 0.2 ***

Sun Dec 22 19:26:07 GMT 2002 node <node@insanity.tek.net>
lashd
* alsa_patch.[ch]: changed gets to use const patches, added _dup
* added alsa_client.[ch]
* project.[ch], server.c: made it use the alsa_mgr

Sat Dec 21 23:48:45 GMT 2002 node <node@insanity.tek.net>
lashd
* added alsa_mgr.[ch], alsa_fport.[ch]
* server.[ch]: added alsa_mgr field

Thu Dec 19 17:34:26 GMT 2002 node <node@insanity.tek.net>
lashd
* client.[ch]: change alsa_client_id field from int to unsigned char
* client_event.[ch], server.c: made the server not accept a second jack
  client name
liblash
* protocol.[ch]: protocol_t -> lash_protocol_t
* [API~] client_interface.h, lash.c: added protocol argument to lash_init
* lash.c: added null pointer checks

Wed Dec 18 21:19:34 GMT 2002 node <node@insanity.tek.net>
liblash
* [API+] config.[ch]: added {get,set}_double

Mon Dec 16 19:05:16 GMT 2002 node <node@insanity.tek.net>
lashd
* server.c, client_event.[ch]: removed support for CCA_{Jack,Alsa}_Ports events
* added jack_fport.[ch]
* jack_mgr.[ch]: added jack_fport use
liblash
* internal.h: changed event's type field from int to enum CCA_Event_Types
* types.h: removed CCA_{Jack,Alsa}_Ports event types
* [API+] list.h: added lash_list_concat

Sun Dec 15 22:30:16 GMT 2002 node <node@insanity.tek.net>
lashd
* conn_mgr.[ch], server.[ch], main.c: made conn_mgr more of a server property
* jack_mgr.c: made the jack_mgr quit properly
* conn_mgr.c: made the conn_mgr quit properly
* loader.c: ignore KILL, TERM and HUP signals

Sat Dec 14 17:33:30 GMT 2002 node <node@insanity.tek.net>
lashd
* jack_mgr.[ch]: using socket pair instead of cond
* jack_patch.[ch]: added jack_patch_get_from_port, changed set/unset to
  use jack_mgr_clients instead of projects
* project.[ch], server.c: changed conn_mgr field to server in project_t
* project.[ch], client_event.[ch], server.c: changed to using jack_mgr

Fri Dec 13 11:55:10 GMT 2002 node <node@insanity.tek.net>
lashd:
* store.c: handle configs with value_size = 0
* client_event.[ch]: server.c: added port creation handlers
* jack_patch.[ch]: added jack_patch_dup, made gets parameters consts
* server.[ch], conn_mgr.[ch]: moved server event queue to the server
* added jack_mgr*
liblash:
* types.h: added CCA_Jack_Ports, CCA_Alsa_Ports

Thu Dec 12 20:43:27 GMT 2002 node <node@insanity.tek.net>
lashd:
* conn_mgr.c: added protocol checking
liblash:
* [API+] added protocol.[ch]
* [API+] comm_buffer.[ch], comm.c: added protocol mismatch handling
* [API+] comm_buffer.[ch]: added lash_comm_event_get_number
* [API~] client.[ch]: changed lash_client_t.server_connected from int to uint32_t
* comm_buffer.c: changed some direct access to _new
* comm_buffer.c: removed jack client/alsa client code

Wed Dec 11 16:39:41 GMT 2002 node <node@insanity.tek.net>
lashd
* store.[ch], client.[ch], project.c: made projects and clients work
  with the new safer stores
* server.c, client_event.[ch]: added server_lash_event_save_data_set, telling
  stores to write to disk and removed the writing after every config, removed
  useless assert (config)
* project.[ch], client_event.c: added check for an active project with the
  specified directory when restoring
* project.c: project_lose_client: fixed:
  project->lost_clients = lash_list_append (project->client, client);
* conn.[ch], conn_mgr.c: implemented pinging
* jack_patch.[ch]: added jack_patch_switch_clients
* alsa_patch.[ch]: fixed bug not changing the uuids in alsa_patch_switch_clients
* project.c: made client_get_jack_patches get input connections properly by
  wrapping it up in client_get_jack_patches_with_type and using
  jack_patch_switch_clients
* client_event.c: added sleep(1) in jack client name and alsa client id handler,
  so as to allow the client to register its ports - perhaps a Port_Registered
  event is needed?
* jack_patch.c: removed debugging output
* project.c: added alsa patch specs debugging output
liblash
* comm.c: changed ping code to use lash_comm_event_* instead of direct access
* comm.c: added some debugging output
* socket.c: removed buffer debugging output
* comm.c: removed send/recv event debugging output
* client_interface.h: "lash_config_t * event" -> "lash_config_t * config"
* [API+] event.[ch]: added lash_event_set_alsa_id
* [API+] event.[ch]: added lash_event_new_with_all
* [API+] client_interface.h, lash.c: reintroduced lash_jack_client_name and 
  lash_alsa_client_id

Tue Dec 10 18:21:01 GMT 2002 node <node@insanity.tek.net>
lashd
* store.[ch], client.c: made the store always exist, regardless of whether or
  not it opened correctly.  Returns ints and things to indicate success instead.
