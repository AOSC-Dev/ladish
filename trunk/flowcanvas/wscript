#!/usr/bin/env python
import Params

# Variables for 'waf dist'
VERSION = '0.5.2'
APPNAME = 'flowcanvas'

# Mandatory variables
srcdir = '.'
blddir = 'build'

def set_options(opt):
	opt.tool_options('compiler_cxx')
	opt.tool_options('compiler_cc')

def configure(conf):
	if not conf.env['CC']:
		conf.check_tool('compiler_cc')
	if not conf.env['CXX']:
		conf.check_tool('compiler_cxx')
	if not conf.env['GNOMECANVASMM']:
		conf.check_pkg('libgnomecanvasmm-2.6', destvar='GNOMECANVASMM', vnum='2.6.0', mandatory=True)
	if not conf.env['GLIBMM']:
		conf.check_pkg('gtkmm-2.4', destvar='GLIBMM', vnum='2.10.0', mandatory=True)
	if not conf.env['AGRAPH']:
		conf.check_pkg('libgvc', destvar='AGRAPH', vnum='2.8', mandatory=False)
	conf.check_header('boost/shared_ptr.hpp')
	conf.check_header('boost/weak_ptr.hpp')
	conf.write_config_header('waf-config.h')
	conf.env.append_value('CXXFLAGS', '-DCONFIG_H_PATH=\\\"waf-config.h\\\"')

def build(bld):
	# Headers (flowcanvas)
	install_files('PREFIX', 'include/flowcanvas', 'flowcanvas/*.hpp')
	
	# Library (src)
	obj = bld.create_obj('cpp', 'shlib')
	obj.source = '''
		src/Canvas.cpp 
		src/Connectable.cpp 
		src/Connection.cpp 
		src/Ellipse.cpp 
		src/Item.cpp 
		src/Module.cpp 
		src/Port.cpp
	'''
	obj.includes = '..'
	obj.name     = 'libflowcanvas'
	obj.target   = 'flowcanvas'
	obj.uselib   = 'GTKMM GNOMECANVASMM'
	obj.vnum     = '1.0.0'

