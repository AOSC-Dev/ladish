#!/usr/bin/env python
import Params
import autowaf
import os

# Version of this package (even if built as a child)
REDLANDMM_VERSION = '0.0.0'
REDLANDMM_LIB_VERSION = '0.0.0'

# Variables for 'waf dist'
VERSION = REDLANDMM_VERSION
APPNAME = 'redlandmm'

# Mandatory variables
srcdir = '.'
blddir = 'build'

def set_options(opt):
	autowaf.set_options(opt)
	opt.tool_options('compiler_cxx')

def configure(conf):
	autowaf.configure(conf)
	if not conf.env['HAVE_GLIBMM']:
		conf.check_pkg('glibmm-2.4', destvar='GLIBMM', vnum='2.16.0', mandatory=True)
	if not conf.env['HAVE_GTHREAD']:
		conf.check_pkg('gthread-2.0', destvar='GTHREAD', vnum='2.16.0', mandatory=True)
	if not conf.env['HAVE_REDLAND']:
		conf.check_pkg('redland', destvar='REDLAND', vnum='1.0.8', mandatory=True)
	if not conf.env['CXX']:
		conf.check_tool('compiler_cxx')

def build(bld):
	# Headers
	install_files('PREFIX', 'include/redlandmm', 'redlandmm/*.hpp')
	
	# Pkgconfig file
	autowaf.build_pc(bld, 'REDLANDMM', REDLANDMM_VERSION, 'GLIBMM GTHREAD REDLAND')
	
	# Library
	obj = bld.create_obj('cpp', 'shlib')
	obj.source = '''
		src/Model.cpp
		src/Namespaces.cpp
		src/Node.cpp
		src/Query.cpp
		src/World.cpp
	'''
	obj.includes = '..'
	obj.name     = 'libredlandmm'
	obj.target   = 'redlandmm'
	obj.uselib   = 'REDLAND GLIBMM GTHREAD'
	obj.vnum     = REDLANDMM_LIB_VERSION

	# Unit tests
	obj = bld.create_obj('cpp', 'program')
	obj.source       = 'tests/rdf_test.cpp'
	obj.includes     = '..'
	obj.uselib_local = 'libredlandmm'
	obj.target       = 'tests/rdf_test'
	obj.inst_var     = 0

	# Documentation
	autowaf.build_dox(bld, 'REDLANDMM', REDLANDMM_VERSION, srcdir, blddir)
	install_files('PREFIX', 'share/doc/redlandmm', blddir + '/default/doc/html/*')

