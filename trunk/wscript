#!/usr/bin/env python
import string
import os
import Params
import autowaf

# Variables for 'waf dist'
VERSION = '0.0.1'
APPNAME = 'drobillad'

# Mandatory variables
srcdir = '.'
blddir = 'build'
	
# Absolute paths (for building against local library versions)
abssrcdir = os.path.abspath(srcdir)
absblddir = os.path.abspath(blddir)

def set_options(opt):
	autowaf.set_options(opt)
	opt.tool_options('compiler_cxx')
	opt.tool_options('compiler_cc')
	opt.sub_options('lv2core')
	opt.sub_options('lv2')
	opt.sub_options('slv2')
	opt.sub_options('evoral')
	opt.sub_options('raul')
	opt.sub_options('flowcanvas')
	opt.sub_options('patchage')
	opt.sub_options('redlandmm')
	opt.sub_options('ingen')

def sub_config_and_use(conf, name, library = True):
	conf.sub_config(name)
	tok = string.upper(name)
	conf.define('HAVE_' + tok, True)
	conf.env['HAVE_' + tok] = True
	conf.env.append_value('CCFLAGS_' + tok, '-I' + abssrcdir + '/' + name)
	conf.env.append_value('CXXFLAGS_' + tok, '-I' + abssrcdir + '/' + name)
	if library:
		autowaf.set_local_lib(conf, name)
		conf.env.append_value('LINKFLAGS_' + tok, '-l' + name)
		conf.env.append_value('LINKFLAGS', '-L' + absblddir + '/default/' + name)

def configure(conf):
	autowaf.set_recursive()
	autowaf.configure(conf)
	sub_config_and_use(conf, 'lv2core', False)
	sub_config_and_use(conf, 'lv2', False)
	sub_config_and_use(conf, 'slv2')
	sub_config_and_use(conf, 'evoral')
	sub_config_and_use(conf, 'raul')
	sub_config_and_use(conf, 'flowcanvas')
	sub_config_and_use(conf, 'patchage')
	sub_config_and_use(conf, 'redlandmm')
	sub_config_and_use(conf, 'ingen', False)

def build(bld):
	autowaf.set_recursive()
	bld.add_subdirs('lv2core lv2 slv2 evoral raul flowcanvas patchage redlandmm ingen')

